name: CI/CD Docker

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  DOCKER_IMAGE: docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/noleftovers
  VERSION: ${{ github.sha }}
  NAME: go_cicd

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push Frontend
        id: frontend_build
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:frontend-${{ env.VERSION }}

      - name: Build and push Backend
        id: backend_build
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:backend-${{ env.VERSION }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-go ]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Print Environment Variables
        run: |
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}"
          echo "VERSION=${{ github.sha }}"
          echo "RDS_HOST=${{ secrets.RDS_HOST }}"
          echo "RDS_PORT=${{ secrets.RDS_PORT }}"
          echo "RDS_USER=${{ secrets.RDS_USER }}"
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}"
          echo "RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}"
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"
      - name: Deploy with Docker Compose
        run: |
          cd ~/noleftovers  # docker-compose.yml 파일이 있는 경로로 변경
          docker-compose down || true
          docker-compose pull
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> .env
          echo "VERSION=${{ github.sha }}" >> .env
          echo "RDS_HOST=${{ secrets.RDS_HOST }}" >> .env
          echo "RDS_PORT=${{ secrets.RDS_PORT }}" >> .env
          echo "RDS_USER=${{ secrets.RDS_USER }}" >> .env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env
          echo "RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          cat .env  # .env 파일 내용을 출력하여 확인
          docker-compose up -d
